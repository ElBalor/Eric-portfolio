/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client"
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

export default function DragonModel(props) {
  const { nodes, materials } = useGLTF('/models/DragonAttenuation.glb')
  const modelRef = useRef();

  useFrame(() => {
    modelRef.current.rotation.y += 0.007;
  });
  return (
    <group {...props} dispose={null} ref={modelRef}>
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cloth_Backdrop.geometry}
        material={materials['Cloth Backdrop']}
        position={[-0.155, -0.842, -0.17]}
        scale={3.5}
      /> */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dragon.geometry}
        material={materials['Dragon with Attenuation']}
        position={[0, -0.731, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.25}
      />
    </group>
  )
}

useGLTF.preload('/models/DragonAttenuation.glb')